package br.ufmt.alg3.telas;

import br.ufmt.alg3.dao.EmpresaDAO;
import br.ufmt.alg3.entidades.Empresa;
import br.ufmt.alg3.factory.EmpresaFactory;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class EmpresaJPanel extends javax.swing.JPanel {
    
    private EmpresaDAO dao = new EmpresaFactory().createDAO();

    /**
     * Creates new form EmpresaJPanel
     */
    public EmpresaJPanel() {
        initComponents();
        atualizaTabela();
    }
    
    private void atualizaTabela(){
        List<Empresa> tuplas = dao.listar();
        DefaultTableModel dtm = (DefaultTableModel) jTableEmpresa.getModel();
        int linhas = jTableEmpresa.getRowCount();
        for(int i = linhas -1; i >= 0; i--){
            dtm.removeRow(i);
        }
        for(Empresa empresa : tuplas){
            Object[] obj = new Object[]{empresa.getIdEmpresa(),empresa.getNome(),empresa.getCnpj()};
            dtm.addRow(obj);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        jTableEmpresa = new javax.swing.JTable();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jTextFieldCNPJ = new javax.swing.JTextField();
        jLabelCNPJ = new javax.swing.JLabel();
        jTextFieldIDEmpresa = new javax.swing.JTextField();
        jLabelIDEmpresa = new javax.swing.JLabel();
        jButtonCancelar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Empresa"));

        jTableEmpresa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Empresa", "Nome", "CNPJ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(jTableEmpresa);

        jLabelNome.setText("Nome:");

        jLabelCNPJ.setText("CNPJ:");

        jTextFieldIDEmpresa.setEditable(false);

        jLabelIDEmpresa.setText("ID Empresa:");

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelCNPJ)
                    .addComponent(jLabelIDEmpresa)
                    .addComponent(jLabelNome)
                    .addComponent(jTextFieldCNPJ, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                    .addComponent(jTextFieldIDEmpresa)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(83, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonExcluir)
                            .addComponent(jButtonEditar))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSalvar)
                            .addComponent(jButtonCancelar))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelIDEmpresa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIDEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelCNPJ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelNome))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // Limpar campos
        jTextFieldIDEmpresa.setText("");
        jTextFieldNome.setText("");
        jTextFieldCNPJ.setText("");
        atualizaTabela();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // Adicionar ou Alterar
        Empresa empresa = new Empresa();
        empresa.setNome(jTextFieldNome.getText());
        empresa.setCnpj(jTextFieldCNPJ.getText());
        
        System.out.println(empresa.getNome() +" "+ empresa.getCnpj());
        
        try{
            int id = Integer.parseInt(jTextFieldIDEmpresa.getText());
            empresa.setIdEmpresa(id);
            dao.atualizar(empresa);
            JOptionPane.showMessageDialog(jTableEmpresa, "Atualizado com sucesso!");
        }catch(NumberFormatException e){
            dao.adicionar(empresa);
            JOptionPane.showMessageDialog(jTableEmpresa, "Adicionado com sucesso!");
        }
        
        jButtonCancelarActionPerformed(evt);
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // Editar
        if(jTableEmpresa.getSelectedRowCount() == 1){
            int linha = jTableEmpresa.getSelectedRow();
            jTextFieldIDEmpresa.setText(jTableEmpresa.getValueAt(linha, 0) + "");
            jTextFieldNome.setText(jTableEmpresa.getValueAt(linha, 1) + "");
            jTextFieldCNPJ.setText(jTableEmpresa.getValueAt(linha, 2) + "");
            atualizaTabela();
        }else{
            if(jTableEmpresa.getSelectedRowCount() < 1){
                JOptionPane.showMessageDialog(jTableEmpresa, "Selecione 1 linha");
            }else if(jTableEmpresa.getSelectedRowCount() > 1){
                JOptionPane.showMessageDialog(jTableEmpresa, "Selecione 1 linha apenas");
            }
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // Excluir
        boolean removido = false;
        try{
            if(jTableEmpresa.getSelectedRowCount() >= 1){
                int[] tuplas = jTableEmpresa.getSelectedRows();
                for(int i = tuplas.length - 1; i >= 0; i--){
                    int id = Integer.parseInt(jTableEmpresa.getValueAt(tuplas[i], 0) + "");
                    removido = dao.remover(id);
                }
                if(removido == true){
                    JOptionPane.showMessageDialog(jTableEmpresa, "Removido com sucesso");
                }else{
                    JOptionPane.showMessageDialog(jTableEmpresa, "Empresa vinculada a outra tupla");
                }
                jButtonCancelarActionPerformed(evt);
            }else{
                JOptionPane.showMessageDialog(jTableEmpresa, "Selecione ao menos 1 linha");
            }
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(jTableEmpresa, "Erro 404! Linha não existe");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabelCNPJ;
    private javax.swing.JLabel jLabelIDEmpresa;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTableEmpresa;
    private javax.swing.JTextField jTextFieldCNPJ;
    private javax.swing.JTextField jTextFieldIDEmpresa;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
