package br.ufmt.alg3.telas;

import br.ufmt.alg3.dao.CaixaDAO;
import br.ufmt.alg3.dao.EmpresaDAO;
import br.ufmt.alg3.entidades.Caixa;
import br.ufmt.alg3.entidades.Empresa;
import br.ufmt.alg3.factory.CaixaFactory;
import br.ufmt.alg3.factory.EmpresaFactory;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CaixaJPanel extends javax.swing.JPanel {

    CaixaDAO dao = CaixaFactory.createDAO();
    EmpresaDAO daoEmpresa = EmpresaFactory.createDAO();
    
    /**
     * Creates new form CaixaJPanel
     */
    public CaixaJPanel() {
        initComponents();
        atualizaTabela();
        atualizaTabelaEmpresa();
    }
    
    private void atualizaTabela(){
        int linhas = jTableCaixa.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel) jTableCaixa.getModel();
        List<Caixa> tuplas = dao.listar();
        for(int i = linhas - 1; i >= 0; i--){
            dtm.removeRow(i);
        }
        for(Caixa caixa : tuplas){
            Object[] obj = new Object[]{caixa.getIdCaixa(),caixa.getEmpresa().getIdEmpresa(),caixa.getNome(),caixa.getHoraAbertura(),caixa.getHoraFechamento()};
            dtm.addRow(obj);
        }
    }
    
    private void atualizaTabelaEmpresa(){
        int linhas = jTableIDEmpresa.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel) jTableIDEmpresa.getModel();
        List<Empresa> tuplas = daoEmpresa.listar();
        for(int i = linhas - 1; i >= 0; i--){
            dtm.removeRow(i);
        }
        for(Empresa empresa : tuplas){
            Object[] obj = new Object[]{empresa.getIdEmpresa(),empresa.getNome()};
            dtm.addRow(obj);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCaixa = new javax.swing.JTable();
        jLabelIDCaixa = new javax.swing.JLabel();
        jTextFieldIDCaixa = new javax.swing.JTextField();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabelIDEmpresa = new javax.swing.JLabel();
        jTextFieldIDEmpresa = new javax.swing.JTextField();
        jLabelHorarioAbertura = new javax.swing.JLabel();
        jLabelHorarioFechamento = new javax.swing.JLabel();
        jButtonExcluir = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableIDEmpresa = new javax.swing.JTable();
        jButtonConfirmar = new javax.swing.JButton();
        jTextFieldHorarioAbertura = new javax.swing.JFormattedTextField();
        jTextFieldHorarioFechamento = new javax.swing.JFormattedTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Caixa"));

        jTableCaixa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "IDCaixa", "IDEmpresa", "Nome", "Hora Abertura", "Hora Fechamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableCaixa);

        jLabelIDCaixa.setText("ID Caixa:");

        jTextFieldIDCaixa.setEditable(false);
        jTextFieldIDCaixa.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldIDCaixa.setToolTipText("ID Caixa");

        jLabelNome.setText("Nome:");

        jTextFieldNome.setToolTipText("Máximo 120 Caracteres");

        jLabelIDEmpresa.setText("ID Empresa:");

        jTextFieldIDEmpresa.setEditable(false);
        jTextFieldIDEmpresa.setToolTipText("ID Empresa");

        jLabelHorarioAbertura.setText("Horário de Abertura:");

        jLabelHorarioFechamento.setText("Horário de Fechamento:");

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jTableIDEmpresa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "IDEmpresa", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableIDEmpresa);

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jTextFieldHorarioAbertura.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance())));
        jTextFieldHorarioAbertura.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldHorarioAbertura.setToolTipText("hh:mm:ss");

        jTextFieldHorarioFechamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance())));
        jTextFieldHorarioFechamento.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldHorarioFechamento.setToolTipText("hh:mm:ss");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextFieldIDEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                        .addComponent(jLabelIDEmpresa)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                .addComponent(jButtonSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCancelar))))
                    .addComponent(jButtonConfirmar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIDCaixa)
                    .addComponent(jTextFieldIDCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNome))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelHorarioAbertura)
                    .addComponent(jTextFieldHorarioAbertura, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelHorarioFechamento)
                    .addComponent(jTextFieldHorarioFechamento, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIDCaixa)
                    .addComponent(jLabelHorarioAbertura)
                    .addComponent(jLabelHorarioFechamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIDCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldHorarioAbertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldHorarioFechamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNome)
                .addGap(12, 12, 12)
                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelIDEmpresa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIDEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonConfirmar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonEditar)
                            .addComponent(jButtonExcluir))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCancelar)
                            .addComponent(jButtonSalvar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jTextFieldHorarioFechamento.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // Limpar campos
        jTextFieldIDCaixa.setText("");
        jTextFieldIDEmpresa.setText("");
        jTextFieldHorarioAbertura.setText("");
        jTextFieldHorarioFechamento.setText("");
        jTextFieldNome.setText("");
        atualizaTabela();
        atualizaTabelaEmpresa();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // Adicionar ou alterar
        Caixa caixa = new Caixa();
        Empresa empresa = new Empresa();
        try{
            empresa.setIdEmpresa(Integer.parseInt(jTextFieldIDEmpresa.getText()));
            caixa.setEmpresa(empresa);
            caixa.setHoraAbertura(jTextFieldHorarioAbertura.getText());
            caixa.setHoraFechamento(jTextFieldHorarioFechamento.getText());
            caixa.setNome(jTextFieldNome.getText());
            
            try{
                caixa.setIdCaixa(Integer.parseInt(jTextFieldIDCaixa.getText()));
                dao.atualizar(caixa);
                jButtonCancelarActionPerformed(evt);
                JOptionPane.showMessageDialog(jTableCaixa, "Atualizado com sucesso!");
            }catch(NumberFormatException e){
                dao.adicionar(caixa);
                jButtonCancelarActionPerformed(evt);
                JOptionPane.showMessageDialog(jTableCaixa, "Adicionado com sucesso!");
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(jTableIDEmpresa,"Adicione uma empresa");
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // Editar
        if(jTableCaixa.getSelectedRowCount() == 1){
            int linha = jTableCaixa.getSelectedRow();
            jTextFieldIDCaixa.setText(jTableCaixa.getValueAt(linha, 0) + "");
            jTextFieldIDEmpresa.setText(jTableCaixa.getValueAt(linha, 1) + "");
            jTextFieldNome.setText(jTableCaixa.getValueAt(linha, 2) + "");
            jTextFieldHorarioAbertura.setText(jTableCaixa.getValueAt(linha, 3) + "");
            jTextFieldHorarioFechamento.setText(jTableCaixa.getValueAt(linha, 4) + "");
            atualizaTabela();
            atualizaTabelaEmpresa();
        }else if(jTableCaixa.getSelectedRowCount() < 1){
            JOptionPane.showMessageDialog(jTableCaixa, "Selecione ao menos 1 linha");
        }else{
            JOptionPane.showMessageDialog(jTableCaixa, "Selecione 1 linha apenas");
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // Excluir
        if(jTableCaixa.getSelectedRowCount() >= 1){
            int[] tuplas = jTableCaixa.getSelectedRows();
            for(int i = tuplas.length - 1; i >= 0; i--){
                int id = Integer.parseInt(jTableCaixa.getValueAt(tuplas[i], 0) + "");
                dao.remover(id);
            }
            jButtonCancelarActionPerformed(evt);
            JOptionPane.showMessageDialog(jTableCaixa, "Excluído com sucesso!");
        }else{
            JOptionPane.showMessageDialog(jTableCaixa, "Selecione ao menos 1 linha");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        // Confirmar
        if(jTableIDEmpresa.getSelectedRowCount() == 1){
            int linha = jTableIDEmpresa.getSelectedRow();
            jTextFieldIDEmpresa.setText(jTableIDEmpresa.getValueAt(linha, 0) + "");
            atualizaTabela();
            atualizaTabelaEmpresa();
        }else if(jTableIDEmpresa.getSelectedRowCount() < 1){
            JOptionPane.showMessageDialog(jTableIDEmpresa, "Selecione ao menos 1 linha");
        }else{
            JOptionPane.showMessageDialog(jTableIDEmpresa, "Selecione 1 linha apenas");
        }
    }//GEN-LAST:event_jButtonConfirmarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabelHorarioAbertura;
    private javax.swing.JLabel jLabelHorarioFechamento;
    private javax.swing.JLabel jLabelIDCaixa;
    private javax.swing.JLabel jLabelIDEmpresa;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCaixa;
    private javax.swing.JTable jTableIDEmpresa;
    private javax.swing.JFormattedTextField jTextFieldHorarioAbertura;
    private javax.swing.JFormattedTextField jTextFieldHorarioFechamento;
    private javax.swing.JTextField jTextFieldIDCaixa;
    private javax.swing.JTextField jTextFieldIDEmpresa;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
