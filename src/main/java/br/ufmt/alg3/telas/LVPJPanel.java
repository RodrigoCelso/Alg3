package br.ufmt.alg3.telas;

import br.ufmt.alg3.dao.LVPDAO;
import br.ufmt.alg3.dao.ProdutoDAO;
import br.ufmt.alg3.dao.VendaDAO;
import br.ufmt.alg3.entidades.LVP;
import br.ufmt.alg3.entidades.Produto;
import br.ufmt.alg3.entidades.Venda;
import br.ufmt.alg3.factory.LVPFactory;
import br.ufmt.alg3.factory.ProdutoFactory;
import br.ufmt.alg3.factory.VendaFactory;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class LVPJPanel extends javax.swing.JPanel {

    private LVPDAO dao = LVPFactory.createDAO();
    private ProdutoDAO daoProduto = ProdutoFactory.createDAO();
    private VendaDAO daoVenda = VendaFactory.createDAO();
    
    /**
     * Creates new form LVPJPanel
     */
    public LVPJPanel() {
        initComponents();
        atualizaTabela();
        atualizaTabelaProduto();
        atualizaTabelaVenda();
    }
    
    private void atualizaTabela(){
        List<LVP> tuplas = dao.listar();
        DefaultTableModel dtm = (DefaultTableModel) jTableLVP.getModel();
        int linhas = jTableLVP.getRowCount();
        for(int i = linhas - 1; i >= 0; i--){
            dtm.removeRow(i);
        }
        for(LVP lvp : tuplas){
            Object[] obj = new Object[]{lvp.getIdLvp(),lvp.getProduto().getIdProduto(),lvp.getVenda().getIdVenda(),lvp.getQuantidade()};
            dtm.addRow(obj);
        }
    }
    
    private void atualizaTabelaProduto(){
        List<Produto> tuplas = daoProduto.listar();
        DefaultTableModel dtm = (DefaultTableModel) jTableIDProduto.getModel();
        int linhas = jTableIDProduto.getRowCount();
        for(int i = linhas -1; i >= 0; i--){
            dtm.removeRow(i);
        }
        for(Produto produto: tuplas){
            Object[] obj = new Object[]{produto.getIdProduto(), produto.getNome()};
            dtm.addRow(obj);
        }
    }
    
    private void atualizaTabelaVenda(){
        List<Venda> tuplas = daoVenda.listar();
        DefaultTableModel dtm = (DefaultTableModel) jTableIDVenda.getModel();
        int linhas = jTableIDVenda.getRowCount();
        for(int i = linhas -1; i >= 0; i--){
            dtm.removeRow(i);
        }
        for(Venda venda: tuplas){
            Object[] obj = new Object[]{venda.getIdVenda(), venda.getValor()};
            dtm.addRow(obj);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelIDLVP = new javax.swing.JLabel();
        jLabelIDVenda = new javax.swing.JLabel();
        jLabelIDProduto = new javax.swing.JLabel();
        jTextFieldIDLVP = new javax.swing.JTextField();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jTextFieldIDVenda = new javax.swing.JTextField();
        jTextFieldIDProduto = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        jTableLVP = new javax.swing.JTable();
        jLabelQuantidade = new javax.swing.JLabel();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableIDProduto = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableIDVenda = new javax.swing.JTable();
        jButtonConfirmarVenda = new javax.swing.JButton();
        jButtonConfirmarProduto = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("LVP"));

        jLabelIDLVP.setText("ID LVP:");

        jLabelIDVenda.setText("ID Venda:");

        jLabelIDProduto.setText("ID Produto:");

        jTextFieldIDLVP.setEditable(false);

        jTextFieldIDVenda.setEditable(false);

        jTextFieldIDProduto.setEditable(false);

        jTableLVP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID LVP", "ID Cliente", "ID Venda", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(jTableLVP);

        jLabelQuantidade.setText("Quantidade:");

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jTableIDProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Produto", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableIDProduto);

        jTableIDVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Venda", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableIDVenda);

        jButtonConfirmarVenda.setText("Confirmar");
        jButtonConfirmarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarVendaActionPerformed(evt);
            }
        });

        jButtonConfirmarProduto.setText("Confirmar");
        jButtonConfirmarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelQuantidade)
                    .addComponent(jLabelIDLVP)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jTextFieldIDLVP)
                    .addComponent(jTextFieldQuantidade))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldIDVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonConfirmarVenda))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabelIDVenda))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelIDProduto)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldIDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonConfirmarProduto)))
                        .addContainerGap())
                    .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelIDLVP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIDLVP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelQuantidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonExcluir)
                                .addGap(71, 71, 71)
                                .addComponent(jButtonCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonEditar)
                                .addGap(71, 71, 71)
                                .addComponent(jButtonSalvar)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelIDProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldIDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonConfirmarProduto))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelIDVenda)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jTextFieldIDVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonConfirmarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // Limpar campos
        jTextFieldIDLVP.setText("");
        jTextFieldIDVenda.setText("");
        jTextFieldIDProduto.setText("");
        jTextFieldQuantidade.setText("");
        atualizaTabela();
        atualizaTabelaProduto();
        atualizaTabelaVenda();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // Adicionar ou Alterar
        LVP lvp = new LVP();
        Produto produto = new Produto();
        Venda venda = new Venda();
        try{
            produto.setIdProduto(Integer.parseInt(jTextFieldIDProduto.getText()));
            venda.setIdVenda(Integer.parseInt(jTextFieldIDVenda.getText()));
            lvp.setProduto(produto);
            lvp.setVenda(venda);
            lvp.setQuantidade(Integer.parseInt(jTextFieldQuantidade.getText()));
            try{
                int id = Integer.parseInt(jTextFieldIDLVP.getText());
                lvp.setIdLvp(id);
                dao.atualizar(lvp);
                JOptionPane.showMessageDialog(jTableLVP, "Atualizado com sucesso!");
            }catch(NumberFormatException e){
                dao.adicionar(lvp);
                JOptionPane.showMessageDialog(jTableLVP, "Adicionado com sucesso!");
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(jTableLVP, "Adicione um cliente e/ou venda");
        }
        jButtonCancelarActionPerformed(evt);
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // Editar
        if(jTableLVP.getSelectedRowCount() == 1){
            int linha = jTableLVP.getSelectedRow();
            jTextFieldIDLVP.setText(jTableLVP.getValueAt(linha, 0) + "");
            jTextFieldIDVenda.setText(jTableLVP.getValueAt(linha, 1) + "");
            jTextFieldIDProduto.setText(jTableLVP.getValueAt(linha, 2) + "");
            jTextFieldQuantidade.setText(jTableLVP.getValueAt(linha, 3) + "");
            atualizaTabela();
            atualizaTabelaProduto();
            atualizaTabelaVenda();
        }else{
            if(jTableLVP.getSelectedRowCount() < 1){
                JOptionPane.showMessageDialog(jTableLVP, "Selecione ao menos 1 linha");
            }else{
                JOptionPane.showMessageDialog(jTableLVP, "Selecione 1 linha apenas");
            }
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // Excluir
        try{
            if(jTableLVP.getSelectedRowCount() >= 1){
                int[] tuplas = jTableLVP.getSelectedRows();
                for(int i = tuplas.length - 1; i >= 0; i--){
                    int id = Integer.parseInt(jTableLVP.getValueAt(tuplas[i], 0) + "");
                    dao.remover(id);
                }
                JOptionPane.showMessageDialog(jTableLVP, "Removido com sucesso");
                jButtonCancelarActionPerformed(evt);
            }else{
                JOptionPane.showMessageDialog(jTableLVP, "Selecione ao menos 1 linha");
            }
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(jTableLVP, "Erro 404! Linha não existe");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonConfirmarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarVendaActionPerformed
        // Confirmar
        if(jTableIDVenda.getSelectedRowCount() == 1){
            int linha = jTableIDVenda.getSelectedRow();
            jTextFieldIDVenda.setText(jTableIDVenda.getValueAt(linha, 0) + "");
            atualizaTabela();
            atualizaTabelaVenda();
            atualizaTabelaProduto();
        }else{
            if(jTableIDVenda.getSelectedRowCount() < 1){
                JOptionPane.showMessageDialog(jTableIDVenda, "Selecione 1 linha");
            }else if(jTableIDVenda.getSelectedRowCount() > 1){
                JOptionPane.showMessageDialog(jTableIDVenda, "Selecione 1 linha apenas");
            }
        }
    }//GEN-LAST:event_jButtonConfirmarVendaActionPerformed

    private void jButtonConfirmarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarProdutoActionPerformed
        // Confirmar
        if(jTableIDProduto.getSelectedRowCount() == 1){
            int linha = jTableIDProduto.getSelectedRow();
            jTextFieldIDProduto.setText(jTableIDProduto.getValueAt(linha, 0) + "");
            atualizaTabela();
            atualizaTabelaVenda();
            atualizaTabelaProduto();
        }else{
            if(jTableIDProduto.getSelectedRowCount() < 1){
                JOptionPane.showMessageDialog(jTableIDProduto, "Selecione 1 linha");
            }else if(jTableIDProduto.getSelectedRowCount() > 1){
                JOptionPane.showMessageDialog(jTableIDProduto, "Selecione 1 linha apenas");
            }
        }
    }//GEN-LAST:event_jButtonConfirmarProdutoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmarProduto;
    private javax.swing.JButton jButtonConfirmarVenda;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabelIDLVP;
    private javax.swing.JLabel jLabelIDProduto;
    private javax.swing.JLabel jLabelIDVenda;
    private javax.swing.JLabel jLabelQuantidade;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableIDProduto;
    private javax.swing.JTable jTableIDVenda;
    private javax.swing.JTable jTableLVP;
    private javax.swing.JTextField jTextFieldIDLVP;
    private javax.swing.JTextField jTextFieldIDProduto;
    private javax.swing.JTextField jTextFieldIDVenda;
    private javax.swing.JTextField jTextFieldQuantidade;
    // End of variables declaration//GEN-END:variables
}
